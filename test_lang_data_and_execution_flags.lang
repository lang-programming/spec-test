lang.name = Lang Tests (Lang Data & Execution Flags)
lang.version = v1.0.0

lang.test = 1

# Preparation
# ...

# Tests
fn.testUnit(Lang Data & Execution Flags)
nontry{
	fn.testSubUnit(lang.version - Current version)
	
	try {
		lang.errorOutput = 0
		lang.version = v1.0.0
	}finally {
		lang.errorOutput = 1
		fn.testAssertError($LANG_ERROR_NO_ERROR)
	}
}
nontry{
	fn.testSubUnit(lang.version - Older version)
	
	try {
		lang.errorOutput = 0
		lang.version = v0.99.99
	}finally {
		lang.errorOutput = 1
		fn.testAssertError($LANG_ERROR_LANG_VER_WARNING)
	}
}
nontry{
	fn.testSubUnit(lang.version - Newer version)
	
	try {
		lang.errorOutput = 0
		lang.version = v99.99.99
	}finally {
		lang.errorOutput = 1
		fn.testAssertError($LANG_ERROR_LANG_VER_ERROR)
	}
}
nontry{
	fn.testSubUnit(lang.version - Invalid version format)
	
	try {
		lang.errorOutput = 0
		lang.version = xyz
	}finally {
		lang.errorOutput = 1
		fn.testAssertError($LANG_ERROR_LANG_VER_ERROR)
	}
}
nontry{
	fn.testSubUnit(lang.version - null-Node [Forced node split])
	
	try {
		lang.errorOutput = 0
		lang.version = \!
	}finally {
		lang.errorOutput = 1
		fn.testAssertError($LANG_ERROR_LANG_VER_ERROR)
	}
}

# Reset
lang.version = v1.0.0
