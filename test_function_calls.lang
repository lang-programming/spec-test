lang.name = Lang Tests (Function Calls)
lang.version = v1.0.0

lang.test = 1

# Preparation
fp.getParamA = ($a, $b, $c, $d) -> return $a
fp.getParamB = ($a, $b, $c, $d) -> return $b
fp.getParamC = ($a, $b, $c, $d) -> return $c
fp.getParamD = ($a, $b, $c, $d) -> return $d

# Tests
fn.testUnit(Function Calls)
{
	fn.testSubUnit(Function pointer call [Whitespaces, Between two arguments, Text values])
	
	fn.testAssertStrictEquals(fp.getParamA(pa,pb,pc,pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa,pb,pc,pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa,pb,pc,pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa,pb,pc,pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa, pb, pc, pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa, pb, pc, pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa, pb, pc, pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa, pb, pc, pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa,	pb,	pc,	pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa,	pb,	pc,	pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa,	pb,	pc,	pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa,	pb,	pc,	pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa ,pb ,pc ,pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa ,pb ,pc ,pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa ,pb ,pc ,pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa ,pb ,pc ,pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa	,pb	,pc	,pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa	,pb	,pc	,pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa	,pb	,pc	,pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa	,pb	,pc	,pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa , pb , pc , pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa , pb , pc , pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa , pb , pc , pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa , pb , pc , pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa	,	pb	,	pc	,	pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa	,	pb	,	pc	,	pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa	,	pb	,	pc	,	pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa	,	pb	,	pc	,	pd), {{{pd}}})
}
{
	fn.testSubUnit(Function pointer call [Whitespaces, Before first argument and behind last argument, Text values])
	
	fn.testAssertStrictEquals(fp.getParamA( pa,pb,pc,pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB( pa,pb,pc,pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC( pa,pb,pc,pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD( pa,pb,pc,pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(	pa,pb,pc,pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(	pa,pb,pc,pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(	pa,pb,pc,pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(	pa,pb,pc,pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa,pb,pc,pd ), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa,pb,pc,pd ), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa,pb,pc,pd ), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa,pb,pc,pd ), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa,pb,pc,pd	), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa,pb,pc,pd	), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa,pb,pc,pd	), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa,pb,pc,pd	), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA( pa,pb,pc,pd ), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB( pa,pb,pc,pd ), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC( pa,pb,pc,pd ), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD( pa,pb,pc,pd ), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(	pa,pb,pc,pd	), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(	pa,pb,pc,pd	), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(	pa,pb,pc,pd	), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(	pa,pb,pc,pd	), {{{pd}}})
}
{
	fn.testSubUnit(Function pointer call [Whitespaces, Between two arguments and before first argument and behind last argument, Text values])
	
	fn.testAssertStrictEquals(fp.getParamA( pa, pb, pc, pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB( pa, pb, pc, pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC( pa, pb, pc, pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD( pa, pb, pc, pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa, pb, pc, pd ), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa, pb, pc, pd ), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa, pb, pc, pd ), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa, pb, pc, pd ), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA( pa, pb, pc, pd ), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB( pa, pb, pc, pd ), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC( pa, pb, pc, pd ), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD( pa, pb, pc, pd ), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA( pa,	pb,	pc,	pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB( pa,	pb,	pc,	pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC( pa,	pb,	pc,	pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD( pa,	pb,	pc,	pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(	pa,	pb,	pc,	pd), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(	pa,	pb,	pc,	pd), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(	pa,	pb,	pc,	pd), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(	pa,	pb,	pc,	pd), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa,	pb,	pc,	pd ), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa,	pb,	pc,	pd ), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa,	pb,	pc,	pd ), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa,	pb,	pc,	pd ), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(pa,	pb,	pc,	pd	), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(pa,	pb,	pc,	pd	), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(pa,	pb,	pc,	pd	), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(pa,	pb,	pc,	pd	), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA( pa	,	pb	,	pc	,	pd ), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB( pa	,	pb	,	pc	,	pd ), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC( pa	,	pb	,	pc	,	pd ), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD( pa	,	pb	,	pc	,	pd ), {{{pd}}})
	
	fn.testAssertStrictEquals(fp.getParamA(	pa	,	pb	,	pc	,	pd	), {{{pa}}})
	fn.testAssertStrictEquals(fp.getParamB(	pa	,	pb	,	pc	,	pd	), {{{pb}}})
	fn.testAssertStrictEquals(fp.getParamC(	pa	,	pb	,	pc	,	pd	), {{{pc}}})
	fn.testAssertStrictEquals(fp.getParamD(	pa	,	pb	,	pc	,	pd	), {{{pd}}})
}
{
	fn.testSubUnit(Function pointer call [Whitespaces, Between two arguments, Int values])
	
	fn.testAssertStrictEquals(fp.getParamA(1,2,3,4), 1)
	fn.testAssertStrictEquals(fp.getParamB(1,2,3,4), 2)
	fn.testAssertStrictEquals(fp.getParamC(1,2,3,4), 3)
	fn.testAssertStrictEquals(fp.getParamD(1,2,3,4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1, 2, 3, 4), 1)
	fn.testAssertStrictEquals(fp.getParamB(1, 2, 3, 4), 2)
	fn.testAssertStrictEquals(fp.getParamC(1, 2, 3, 4), 3)
	fn.testAssertStrictEquals(fp.getParamD(1, 2, 3, 4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1,	2,	3,	4), 1)
	fn.testAssertStrictEquals(fp.getParamB(1,	2,	3,	4), 2)
	fn.testAssertStrictEquals(fp.getParamC(1,	2,	3,	4), 3)
	fn.testAssertStrictEquals(fp.getParamD(1,	2,	3,	4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1 ,2 ,3 ,4), 1)
	fn.testAssertStrictEquals(fp.getParamB(1 ,2 ,3 ,4), 2)
	fn.testAssertStrictEquals(fp.getParamC(1 ,2 ,3 ,4), 3)
	fn.testAssertStrictEquals(fp.getParamD(1 ,2 ,3 ,4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1	,2	,3	,4), 1)
	fn.testAssertStrictEquals(fp.getParamB(1	,2	,3	,4), 2)
	fn.testAssertStrictEquals(fp.getParamC(1	,2	,3	,4), 3)
	fn.testAssertStrictEquals(fp.getParamD(1	,2	,3	,4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1 , 2 , 3 , 4), 1)
	fn.testAssertStrictEquals(fp.getParamB(1 , 2 , 3 , 4), 2)
	fn.testAssertStrictEquals(fp.getParamC(1 , 2 , 3 , 4), 3)
	fn.testAssertStrictEquals(fp.getParamD(1 , 2 , 3 , 4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1	,	2	,	3	,	4), 1)
	fn.testAssertStrictEquals(fp.getParamB(1	,	2	,	3	,	4), 2)
	fn.testAssertStrictEquals(fp.getParamC(1	,	2	,	3	,	4), 3)
	fn.testAssertStrictEquals(fp.getParamD(1	,	2	,	3	,	4), 4)
}
{
	fn.testSubUnit(Function pointer call [Whitespaces, Before first argument and behind last argument, Int values])
	
	fn.testAssertStrictEquals(fp.getParamA( 1,2,3,4), 1)
	fn.testAssertStrictEquals(fp.getParamB( 1,2,3,4), 2)
	fn.testAssertStrictEquals(fp.getParamC( 1,2,3,4), 3)
	fn.testAssertStrictEquals(fp.getParamD( 1,2,3,4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(	1,2,3,4), 1)
	fn.testAssertStrictEquals(fp.getParamB(	1,2,3,4), 2)
	fn.testAssertStrictEquals(fp.getParamC(	1,2,3,4), 3)
	fn.testAssertStrictEquals(fp.getParamD(	1,2,3,4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1,2,3,4 ), 1)
	fn.testAssertStrictEquals(fp.getParamB(1,2,3,4 ), 2)
	fn.testAssertStrictEquals(fp.getParamC(1,2,3,4 ), 3)
	fn.testAssertStrictEquals(fp.getParamD(1,2,3,4 ), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1,2,3,4	), 1)
	fn.testAssertStrictEquals(fp.getParamB(1,2,3,4	), 2)
	fn.testAssertStrictEquals(fp.getParamC(1,2,3,4	), 3)
	fn.testAssertStrictEquals(fp.getParamD(1,2,3,4	), 4)
	
	fn.testAssertStrictEquals(fp.getParamA( 1,2,3,4 ), 1)
	fn.testAssertStrictEquals(fp.getParamB( 1,2,3,4 ), 2)
	fn.testAssertStrictEquals(fp.getParamC( 1,2,3,4 ), 3)
	fn.testAssertStrictEquals(fp.getParamD( 1,2,3,4 ), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(	1,2,3,4	), 1)
	fn.testAssertStrictEquals(fp.getParamB(	1,2,3,4	), 2)
	fn.testAssertStrictEquals(fp.getParamC(	1,2,3,4	), 3)
	fn.testAssertStrictEquals(fp.getParamD(	1,2,3,4	), 4)
}
{
	fn.testSubUnit(Function pointer call [Whitespaces, Between two arguments and before first argument and behind last argument, Int values])
	
	fn.testAssertStrictEquals(fp.getParamA( 1, 2, 3, 4), 1)
	fn.testAssertStrictEquals(fp.getParamB( 1, 2, 3, 4), 2)
	fn.testAssertStrictEquals(fp.getParamC( 1, 2, 3, 4), 3)
	fn.testAssertStrictEquals(fp.getParamD( 1, 2, 3, 4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1, 2, 3, 4 ), 1)
	fn.testAssertStrictEquals(fp.getParamB(1, 2, 3, 4 ), 2)
	fn.testAssertStrictEquals(fp.getParamC(1, 2, 3, 4 ), 3)
	fn.testAssertStrictEquals(fp.getParamD(1, 2, 3, 4 ), 4)
	
	fn.testAssertStrictEquals(fp.getParamA( 1, 2, 3, 4 ), 1)
	fn.testAssertStrictEquals(fp.getParamB( 1, 2, 3, 4 ), 2)
	fn.testAssertStrictEquals(fp.getParamC( 1, 2, 3, 4 ), 3)
	fn.testAssertStrictEquals(fp.getParamD( 1, 2, 3, 4 ), 4)
	
	fn.testAssertStrictEquals(fp.getParamA( 1,	2,	3,	4), 1)
	fn.testAssertStrictEquals(fp.getParamB( 1,	2,	3,	4), 2)
	fn.testAssertStrictEquals(fp.getParamC( 1,	2,	3,	4), 3)
	fn.testAssertStrictEquals(fp.getParamD( 1,	2,	3,	4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(	1,	2,	3,	4), 1)
	fn.testAssertStrictEquals(fp.getParamB(	1,	2,	3,	4), 2)
	fn.testAssertStrictEquals(fp.getParamC(	1,	2,	3,	4), 3)
	fn.testAssertStrictEquals(fp.getParamD(	1,	2,	3,	4), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1,	2,	3,	4 ), 1)
	fn.testAssertStrictEquals(fp.getParamB(1,	2,	3,	4 ), 2)
	fn.testAssertStrictEquals(fp.getParamC(1,	2,	3,	4 ), 3)
	fn.testAssertStrictEquals(fp.getParamD(1,	2,	3,	4 ), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(1,	2,	3,	4	), 1)
	fn.testAssertStrictEquals(fp.getParamB(1,	2,	3,	4	), 2)
	fn.testAssertStrictEquals(fp.getParamC(1,	2,	3,	4	), 3)
	fn.testAssertStrictEquals(fp.getParamD(1,	2,	3,	4	), 4)
	
	fn.testAssertStrictEquals(fp.getParamA( 1	,	2	,	3	,	4 ), 1)
	fn.testAssertStrictEquals(fp.getParamB( 1	,	2	,	3	,	4 ), 2)
	fn.testAssertStrictEquals(fp.getParamC( 1	,	2	,	3	,	4 ), 3)
	fn.testAssertStrictEquals(fp.getParamD( 1	,	2	,	3	,	4 ), 4)
	
	fn.testAssertStrictEquals(fp.getParamA(	1	,	2	,	3	,	4	), 1)
	fn.testAssertStrictEquals(fp.getParamB(	1	,	2	,	3	,	4	), 2)
	fn.testAssertStrictEquals(fp.getParamC(	1	,	2	,	3	,	4	), 3)
	fn.testAssertStrictEquals(fp.getParamD(	1	,	2	,	3	,	4	), 4)
}
